#!/usr/bin/env tsx

/**
 * Generate comprehensive license report for all dependencies
 */

import { execSync } from 'child_process'
import { writeFileSync, readFileSync } from 'fs'
import { join } from 'path'

interface PackageInfo {
  name: string
  version: string
  license: string
  repository?: string
  publisher?: string
  email?: string
  url?: string
  path: string
}

interface LicenseData {
  [packageName: string]: PackageInfo
}

async function generateLicenseReport() {
  console.log('🔍 Generating comprehensive license report...')

  try {
    // Get license data using license-checker
    const licenseOutput = execSync('npx license-checker --json', { 
      encoding: 'utf8',
      cwd: process.cwd()
    })

    const licenseData: LicenseData = JSON.parse(licenseOutput)
    
    // Categorize licenses
    const licenseCategories: { [key: string]: PackageInfo[] } = {}
    const licenseStats: { [key: string]: number } = {}

    Object.entries(licenseData).forEach(([packageName, info]) => {
      const license = info.license || 'Unknown'
      
      if (!licenseCategories[license]) {
        licenseCategories[license] = []
      }
      licenseCategories[license].push({
        ...info,
        name: packageName
      })

      licenseStats[license] = (licenseStats[license] || 0) + 1
    })

    // Generate markdown report
    const report = generateMarkdownReport(licenseCategories, licenseStats, Object.keys(licenseData).length)
    
    // Write to file
    const outputPath = join(process.cwd(), 'THIRD-PARTY-LICENSES.md')
    writeFileSync(outputPath, report)

    console.log('✅ License report generated successfully!')
    console.log(`📄 Report saved to: ${outputPath}`)
    
    // Print summary
    console.log('\n📊 License Summary:')
    Object.entries(licenseStats)
      .sort(([,a], [,b]) => b - a)
      .forEach(([license, count]) => {
        const percentage = ((count / Object.keys(licenseData).length) * 100).toFixed(1)
        console.log(`  ${license}: ${count} packages (${percentage}%)`)
      })

  } catch (error) {
    console.error('❌ Error generating license report:', error)
    process.exit(1)
  }
}

function generateMarkdownReport(
  licenseCategories: { [key: string]: PackageInfo[] },
  licenseStats: { [key: string]: number },
  totalPackages: number
): string {
  const now = new Date().toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'long' 
  })

  let report = `# Third-Party Licenses

This document contains the complete list of third-party packages and their licenses used in the n8n Workflow Converter project.

## License Summary

| License Type | Count | Percentage |
|--------------|-------|------------|
`

  // Add license statistics
  Object.entries(licenseStats)
    .sort(([,a], [,b]) => b - a)
    .forEach(([license, count]) => {
      const percentage = ((count / totalPackages) * 100).toFixed(1)
      report += `| ${license} | ${count} | ${percentage}% |\n`
    })

  report += `\n**Total Packages**: ${totalPackages}\n\n`

  // Add detailed package information by license
  Object.entries(licenseCategories)
    .sort(([,a], [,b]) => b.length - a.length)
    .forEach(([license, packages]) => {
      report += `## ${license} License (${packages.length} packages)\n\n`
      
      packages
        .sort((a, b) => a.name.localeCompare(b.name))
        .forEach(pkg => {
          report += `### ${pkg.name}@${pkg.version}\n`
          report += `- **License**: ${pkg.license}\n`
          if (pkg.publisher) report += `- **Publisher**: ${pkg.publisher}\n`
          if (pkg.repository) report += `- **Repository**: ${pkg.repository}\n`
          if (pkg.url) report += `- **Homepage**: ${pkg.url}\n`
          report += '\n'
        })
    })

  // Add license texts for major licenses
  report += `## License Texts\n\n`
  
  const majorLicenses = ['MIT', 'Apache-2.0', 'BSD-3-Clause', 'ISC']
  majorLicenses.forEach(license => {
    if (licenseCategories[license]) {
      report += `### ${license}\n\n`
      report += getLicenseText(license)
      report += '\n\n'
    }
  })

  report += `## Automated Generation\n\n`
  report += `This file is automatically generated using the following command:\n\n`
  report += '```bash\nnpm run generate-licenses\n```\n\n'
  report += `The generation script scans all dependencies and creates this comprehensive list.\n\n`
  report += `---\n\n`
  report += `**Generated on**: ${now}  \n`
  report += `**Tool**: license-checker v25.0.1  \n`
  report += `**Total Packages**: ${totalPackages}  \n`
  report += `**Last Updated**: Automatically updated with each dependency change`

  return report
}

function getLicenseText(license: string): string {
  switch (license) {
    case 'MIT':
      return `\`\`\`
MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
\`\`\``

    case 'Apache-2.0':
      return `\`\`\`
Apache License
Version 2.0, January 2004
http://www.apache.org/licenses/

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
\`\`\``

    case 'BSD-3-Clause':
      return `\`\`\`
BSD 3-Clause License

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\`\`\``

    case 'ISC':
      return `\`\`\`
ISC License

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
\`\`\``

    default:
      return `License text for ${license} - see individual package documentation.`
  }
}

// Run the script
if (require.main === module) {
  generateLicenseReport()
}

export { generateLicenseReport }