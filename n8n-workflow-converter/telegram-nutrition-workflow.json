{"meta": {"instanceId": "d27015e9046c7ff6d98d0dc45662e45d88471b605f658807838aa27a29d81bee","templateId": "7756","templateCredsSetupCompleted": true},"nodes": [{"id": "c142f5dd-fbeb-4b25-a0fe-f684546e6eff","name": "Download Voice Message","type": "n8n-nodes-base.telegram","position": [2144,1072],"webhookId": "d3e9d36d-6402-45d6-9f56-5886e616f9fa","parameters": {"fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}","resource": "file","additionalFields": {}},"credentials": {"telegramApi": {"id": "yxDk2RnbewqwPdMO","name": "Pruebas"}},"typeVersion": 1.2},{"id": "e15bb617-61da-4620-936d-15b0b5cf9c59","name": "Input Message Router1","type": "n8n-nodes-base.switch","position": [1776,1136],"parameters": {"rules": {"values": [{"outputKey": "Text","conditions": {"options": {"version": 2,"leftValue": "","caseSensitive": true,"typeValidation": "strict"},"combinator": "and","conditions": [{"id": "fcb767ee-565e-4b56-a54e-6f97f739fc24","operator": {"type": "string","operation": "exists","singleValue": true},"leftValue": "={{ $('Telegram Trigger').item.json.message.text }}","rightValue": ""}]},"renameOutput": true},{"outputKey": "Voice Message","conditions": {"options": {"version": 2,"leftValue": "","caseSensitive": true,"typeValidation": "strict"},"combinator": "and","conditions": [{"id": "c1016c40-f8f2-4e08-8ec8-5cdb88f5c87a","operator": {"type": "object","operation": "exists","singleValue": true},"leftValue": "={{ $('Telegram Trigger').item.json.message.voice }}","rightValue": ""}]},"renameOutput": true},{"outputKey": "Image","conditions": {"options": {"version": 2,"leftValue": "","caseSensitive": true,"typeValidation": "strict"},"combinator": "and","conditions": [{"id": "f8150ac7-eea4-4658-8da9-f7a1c88a471d","operator": {"type": "string","operation": "exists","singleValue": true},"leftValue": "={{ $('Telegram Trigger').item.json.message.photo[0].file_id }}","rightValue": ""}]},"renameOutput": true}]},"options": {"ignoreCase": false,"fallbackOutput": "extra","allMatchingOutputs": true}},"typeVersion": 3.2},{"id": "68f15a08-cbe2-4ad9-9cfe-8b7a7c60787c","name": "get_message (text)","type": "n8n-nodes-base.set","position": [2144,912],"parameters": {"options": {},"assignments": {"assignments": [{"id": "801ec600-22ad-4a94-a2b4-ae72eb271df0","name": "message","type": "string","value": "={{ $('Telegram Trigger').item.json.message.text }}"},{"id": "263071fb-bcdf-42b0-bb46-71b75fa0bf2a","name": "chat_id","type": "string","value": "={{ $('Telegram Trigger').item.json.message.chat.id }}"}]}},"typeVersion": 3.4},{"id": "6561a9a0-2d00-424d-ba86-8852dcb7e935","name": "Download IMAGE","type": "n8n-nodes-base.telegram","position": [2144,1248],"webhookId": "b4a21f4c-e6a6-4c83-9e8e-af73cb7cc96a","parameters": {"fileId": "={{ $('Telegram Trigger').item.json.message.photo[3]?.file_id || $('Telegram Trigger').item.json.message.photo[2]?.file_id || $('Telegram Trigger').item.json.message.photo[1]?.file_id }}","resource": "file","additionalFields": {}},"credentials": {"telegramApi": {"id": "yxDk2RnbewqwPdMO","name": "Pruebas"}},"typeVersion": 1.2},{"id": "b975dcce-68d8-4e3d-b50e-330f3f63812d","name": "Analyze image","type": "@n8n/n8n-nodes-langchain.googleGemini","position": [2480,1248],"parameters": {"text": "=You are a Nutrition Vision Assistant. Think like a food scientist and registered dietitian. Reason silently and do not reveal your steps. From a single food photo, identify the meal components, estimate portion weight in grams per component using geometric/visual cues, then compute total calories, protein, carbs, and fat.\n\nEstimation method (internal only; do not output these steps)\n\nIdentify components: list the main foods (e.g., chicken breast, white rice, mixed salad, sauce).\n\nChoose references: map each component to a standard reference food.\n\nEstimate volume/size: use visible objects for scale (plate ≈ 27 cm diameter, fork tines ≈ 3.5 cm, spoon bowl ≈ 5–6 cm). Approximate shapes (cuboid, cylinder, dome) to get volume in ml (≈ cm³).\n\nConvert to grams (densities, g/ml): meats 1.05; cooked rice 0.66; cooked pasta 0.60; potato/solid starchy veg 0.80; leafy salad 0.15; sauces creamy 1.00; oils 0.91. If the image clearly suggests deep-fried or glossy/oily coating, account for added oil.\n\nMacros & energy per 100 g (reference values):\n\nWhite rice, cooked: 130 kcal, P 2.7, C 28, F 0.3\n\nPasta, cooked: 131 kcal, P 5.0, C 25, F 1.1\n\nChicken breast, cooked skinless: 165 kcal, P 31, C 0, F 3.6\n\nSalmon, cooked: 208 kcal, P 20, C 0, F 13\n\nLean ground beef (≈10% fat), cooked: 217 kcal, P 26, C 0, F 12\n\nBlack beans, cooked: 132 kcal, P 8.9, C 23.7, F 0.5\n\nPotato, baked: 93 kcal, P 2.5, C 21, F 0.1\n\nLettuce/leafy salad: 15 kcal, P 1.4, C 2.9, F 0.2\n\nAvocado: 160 kcal, P 2, C 9, F 15\n\nBread (white): 265 kcal, P 9, C 49, F 3.2\n\nEgg, cooked: 155 kcal, P 13, C 1.1, F 11\n\nCheddar cheese: 403 kcal, P 25, C 1.3, F 33\n\nOlive oil: 884 kcal, P 0, C 0, F 100\n(If a food is not listed, pick the closest standard equivalent.)\n\nHidden oil & sauces: if pan-fried or visibly glossy, add ~1 tablespoon oil = 13.5 g = 120 kcal = 13.5 g fat per clearly coated serving; adjust by visual coverage.\n\nSum totals: compute grams per component × (per-100 g macros/energy) and add all components.\n\nValidation: enforce Calories ≈ 4×Protein + 4×Carbs + 9×Fat. If off by >8%, adjust fat first (oil/sauce most variable), then carbs (starches), keeping protein consistent with visible lean mass.\n\nRounding: round all final totals to integers. Never output ranges or decimals.\n\nOutput rules (must follow exactly)\n\nPlain text only.\n\nUse this exact structure and field order.\n\nValues are numbers only (no units, no \"g\" or \"kcal\"), no extra text, no JSON, no notes.\n\nMeal Description: [short description]\nCalories: [number]\nProteins: [number]\nCarbs: [number]\nFat: [number]","modelId": {"__rl": true,"mode": "list","value": "models/gemini-2.5-pro","cachedResultName": "models/gemini-2.5-pro"},"options": {},"resource": "image","inputType": "binary","operation": "analyze"},"credentials": {"googlePalmApi": {"id": "IrGmkWole0gsi1H8","name": "Google Gemini(PaLM) Api account"}},"typeVersion": 1},{"id": "04b43855-1600-424d-a2ae-458fb72a0525","name": "Analyze voice message","type": "@n8n/n8n-nodes-langchain.googleGemini","position": [2480,1072],"parameters": {"text": "What's in this audio message from telegram user?","modelId": {"__rl": true,"mode": "list","value": "models/gemini-2.5-pro","cachedResultName": "models/gemini-2.5-pro"},"options": {},"resource": "audio","inputType": "binary","operation": "analyze"},"credentials": {"googlePalmApi": {"id": "IrGmkWole0gsi1H8","name": "Google Gemini(PaLM) Api account"}},"typeVersion": 1}]}