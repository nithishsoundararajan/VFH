name: License Compliance Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check license compliance
        run: |
          echo "üîç Checking license compliance..."
          npm run license-validate
          
      - name: Generate license report
        run: |
          echo "üìÑ Generating license report..."
          npm run license-check
          
      - name: Check attribution compliance
        run: |
          echo "üè∑Ô∏è Checking attribution compliance..."
          npm run attribution-check
          
      - name: Generate updated license documentation
        run: |
          echo "üìù Generating license documentation..."
          npm run generate-licenses
          
      - name: Check for license changes
        id: license-changes
        run: |
          if git diff --quiet THIRD-PARTY-LICENSES.md; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Upload license report
        if: steps.license-changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            THIRD-PARTY-LICENSES.md
            licenses.csv
          retention-days: 30
          
      - name: Comment on PR with license changes
        if: github.event_name == 'pull_request' && steps.license-changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the license report
            let licenseReport = '';
            try {
              licenseReport = fs.readFileSync('licenses.csv', 'utf8');
            } catch (error) {
              licenseReport = 'License report not available';
            }
            
            const comment = `## üìÑ License Changes Detected
            
            This PR introduces changes to the project's dependencies that affect licensing.
            
            ### Action Required
            - Review the updated license documentation
            - Ensure all new licenses are compatible with the project license (MIT)
            - Verify proper attribution is included for new dependencies
            
            ### License Report
            A detailed license report has been generated and uploaded as an artifact.
            
            ### Compliance Check
            - ‚úÖ License validation passed
            - ‚úÖ Attribution compliance verified
            - üìÑ License documentation updated
            
            Please review the changes and ensure compliance before merging.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Fail on prohibited licenses
        run: |
          echo "üö´ Checking for prohibited licenses..."
          # This will fail if GPL, AGPL, or LGPL licenses are found
          npm run license-validate
          
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: |
          echo "üîí Running security audit..."
          npm audit --audit-level=moderate
          
      - name: Check for known vulnerabilities
        run: |
          echo "üõ°Ô∏è Checking for known vulnerabilities..."
          npx audit-ci --moderate
          
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
          deny-licenses: GPL-2.0, GPL-3.0, LGPL-2.1, LGPL-3.0, AGPL-1.0, AGPL-3.0
          
  license-compatibility:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check license compatibility
        run: |
          echo "‚öñÔ∏è Checking license compatibility with MIT..."
          
          # Create a script to check license compatibility
          cat > check-compatibility.js << 'EOF'
          const { execSync } = require('child_process');
          
          // Get license data
          const licenseOutput = execSync('npx license-checker --json', { encoding: 'utf8' });
          const licenses = JSON.parse(licenseOutput);
          
          // Define compatible licenses with MIT
          const compatibleLicenses = [
            'MIT',
            'Apache-2.0',
            'BSD-2-Clause',
            'BSD-3-Clause',
            'ISC',
            'CC0-1.0',
            'Unlicense'
          ];
          
          // Define incompatible licenses
          const incompatibleLicenses = [
            'GPL-2.0',
            'GPL-3.0',
            'LGPL-2.1',
            'LGPL-3.0',
            'AGPL-1.0',
            'AGPL-3.0',
            'CPAL-1.0'
          ];
          
          let hasIncompatible = false;
          const issues = [];
          
          Object.entries(licenses).forEach(([pkg, info]) => {
            const license = info.license;
            
            if (incompatibleLicenses.includes(license)) {
              hasIncompatible = true;
              issues.push(`‚ùå ${pkg}: ${license} (incompatible with MIT)`);
            } else if (!compatibleLicenses.includes(license) && license !== 'UNKNOWN') {
              issues.push(`‚ö†Ô∏è  ${pkg}: ${license} (needs review)`);
            }
          });
          
          if (issues.length > 0) {
            console.log('License compatibility issues found:');
            issues.forEach(issue => console.log(issue));
          }
          
          if (hasIncompatible) {
            console.log('\n‚ùå Incompatible licenses found! Please remove or replace these dependencies.');
            process.exit(1);
          } else {
            console.log('‚úÖ All licenses are compatible with MIT');
          }
          EOF
          
          node check-compatibility.js